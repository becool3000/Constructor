#include "CommonShared.hlsl"

[numthreads(8, 8, 1)]
void CSMain(uint3 dispatchId : SV_DispatchThreadID)
{
    uint2 p = dispatchId.xy;
    if (!InBounds(int2(p)))
        return;

    uint id = ReadIdR(p);
    if (id != MATERIAL_FOAM)
    {
        CopyThrough(p);
        return;
    }

    WriteAuxW(p, ReadAuxR(p));

    uint age = min(GetAgeR(p) + 1u, 0xFFFFu);

    int2 below = int2(p) + int2(0, -1);
    if (InBounds(below) && ReadIdR(uint2(below)) == MATERIAL_WATER)
    {
        if (Rand01(p, g_FrameIndex ^ 0x51633u) < g_FoamMergeProb)
        {
            WriteIdW(p, MATERIAL_WATER);
            SetAgeW(p, 0u);
            SetCooldownW(p, 0u);
            return;
        }
    }

    if (age >= g_FoamLifetimeFrames && Rand01(p, g_FrameIndex ^ 0x9E3779B9u) < g_FoamPopProb)
    {
        WriteIdW(p, MATERIAL_AIR);
        SetAgeW(p, 0u);
        SetCooldownW(p, 0u);
        return;
    }

    int2 lateral = Rand01(p, g_FrameIndex ^ 0x7F4A7C15u) < 0.5f ? int2(-1, 0) : int2(1, 0);
    int2 offsets[3] = { int2(0, 1), lateral, int2(0, 0) };

    uint2 dst = p;
    [unroll]
    for (int i = 0; i < 2; ++i)
    {
        int2 cand = int2(p) + offsets[i];
        if (!InBounds(cand))
            continue;

        uint2 uc = uint2(cand);
        if (ReadIdR(uc) == MATERIAL_AIR && ReadIdW(uc) == MATERIAL_AIR)
        {
            dst = uc;
            break;
        }
    }

    WriteIdW(dst, MATERIAL_FOAM);
    WriteAuxW(dst, 0u);
    SetAgeW(dst, age);
    SetCooldownW(dst, 0u);

    if (dst.x != p.x || dst.y != p.y)
    {
        WriteIdW(p, MATERIAL_AIR);
        SetAgeW(p, 0u);
        SetCooldownW(p, 0u);
    }
}
